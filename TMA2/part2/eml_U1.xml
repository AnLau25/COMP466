<?xml version="1.0" encoding="UTF-8"?>
<eml_U1 xmlns="http://part2.com/eml_U1"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <head>
            <title>
                Unit 1: HTML5 &amp; CSS
            </title>
            <subtitle>
                This section summarizes HTML5's core features and functionality, describing in detail its structure, elements, and capabilities for web document creation.
            </subtitle>
        </head>
        <lesson>
            <title>
                Client-side vs Server-side
            </title>
            <paragraph>
                Client-side programming runs in the user's browser and is responsible for rendering the UI,
                handling user interactions, and executing scripts without needing to communicate with the server constantly. Examples include HTML, CSS, and JavaScript.
            </paragraph>
            <paragraph>
                Server-side programming runs on the server and processes client requests, 
                manages databases, performs authentication, and generates dynamic content before sending
                responses back to the client. Examples include Python, PHP, Node.js, and Java.
            </paragraph>
            <list>
                <list-paragraph>
                    A web server holds the data of a domain for users to call via IP and URL, its main
                    tasks involve:
                </list-paragraph>
                <item>Hosting Websites: Stores the files (HTML, CSS, JavaScript, images,
                etc.) needed for a website and serves them to users upon request.</item>
                <item>Handling Requests: Processes it and sends back appropriate responses to
                requests, like opening the right page for a URL.</item>
                <item>Running Applications: Web servers can execute server-side code (like
                PHP, Python, or Node.js) to generate dynamic content.</item>
            </list>
        </lesson>
        <lesson>
            <title>
                Introduction to HTML5
            </title>
            <paragraph>
                HTML5 (HyperText Markup Language) is a markup language used to structure content
                on the web. HTML5, unlike programming languages such as C++ or Java, doesnâ€™t include conditional
                logic or complex algorithms; its real purpose is defining the layout and
                structure of your webpage, like the skeleton to the human body.
            </paragraph>
            <list>
                <list-paragraph>Essential HTML5 Elements</list-paragraph>
                <item>Headings: &lt;h1&gt; to &lt;h6&gt; define different levels of headings.</item>
                <item>Paragraphs: &lt;p&gt; defines a paragraph.</item>
                <item>Links: &lt;a href="url"&gt;Click here&lt;/a&gt; creates a hyperlink.</item>
                <item>Images: &lt;img src="image.jpg" alt="Description"&gt; inserts an image.</item>
                <item>Lists:
                    <list>
                        <item>Unordered List (bullets): &lt;ul&gt;&lt;li&gt;Item&lt;/li&gt;&lt;/ul&gt;</item>
                        <item>Ordered List (numbered): &lt;ol&gt;&lt;li&gt;Item&lt;/li&gt;&lt;/ol&gt;</item>
                    </list>
                </item>
            </list>
        </lesson>
        <example-block>
            <example>
                <title>
                    Basic Structure
                </title>
                <paragraph>
                    All HTML5 follow this structure, regardless of the elements you choose to include.
                </paragraph>
                <list>
                    <item>DOCTYPE: Opens your document, declaring it as HTML5.</item>
                    <item>HTML tag: Wraps the entire document as a single structure.</item>
                    <item>Head tag: Contains the metadata of the document (title, styles, scripts and links).</item>
                    <item>Body tag: Contains the visible content of the document, is where you will put what the user will see and interact with.</item>
                </list>
                <img>
                    /shared/ex1.jpg
                </img>
            </example>
            <example>
                <title>
                    Tables
                </title>
                <paragraph>
                    The table structure will allow you to use the space as an Excel sheet. Making divisions for titles and content as needed.
                </paragraph>
                <list>
                    <item>thead: Read table head is the element that contains your table title cells.</item>
                    <item>th: Title head.</item>
                    <item>tbody: Read table body, contains the cells that form the body of the table, the data.</item>
                    <item>td: Table data cell.</item>
                    <item>tr: Table rows, which allow you to align your cells in rows for display.</item>
                </list>
                <img>
                    /shared/ex2.jpg
                </img>
            </example>
            <example>
                <title>
                    Forms and input types
                </title>
                <paragraph>
                    In HTML5, the &lt;form&gt; element is used to create interactive forms for users to submit data to a web server. Forms
                    are essential for collecting user input, such as text, selections, and files. HTML5 introduced several new form elements 
                    and attributes to enhance functionality and usability. 
                </paragraph>
                <list>
                    <list-paragraph>HTML5 clasic structures</list-paragraph>
                    <item>text: Generic text input field.</item>
                    <item>password: Password input field with hidden characters.</item>
                    <item>button: A button that can execute functions defined by JavaScript.</item>
                    <item>submit: Button that submits the form.</item>
                    <item>reset: Button that resets the form values.</item>
                    <item>radio: Allows to select an option from a group.</item>
                    <item>checkbox: Allows to select one or more options from a group.</item>
                    <item>select: Dropdown to select predefined options.</item>
                    <item>textarea: Multi-line text field.</item>
                </list>
                <list>
                    <list-paragraph>HTML5 new form structures</list-paragraph>
                        <item>color: Allows the user to select a color via a pop-up interface.</item>
                        <item>date: Allows the selection of a date in yyyy-mm-dd format.</item>
                        <item>datetime: Allows the user to enter date and time with UTC time zone.</item>
                        <item>datetime-local: Similar to datetime, but without timezone.</item>
                        <item>email: Specialized field for email addresses, with built-inbvalidation.</item>
                        <item>month: Allows to select a month and year in yyyy-mm format.</item>
                        <item>number: Only accepts numeric values and can include minimum and maximum ranges.</item>
                        <item>range: Appears as a slider to select values in a range.</item>
                        <item>search: Designed for entering search queries, visually similar to a text field.</item>
                        <item>tel: Optimized for entering phone numbers, although without built-in validation.</item>
                        <item>time: Allows selection of a time in hh:mm format.</item>
                        <item>url: Validates the entry as a URL.</item>
                        <item>week: Allows the selection of a week and a year in yyyy-Wnn format.</item>
                </list>
                <img>
                    /shared/ex3.jpg
                </img>
            </example>
        </example-block>
        <lesson>
            <title>
                Introduction to CSS
            </title>
            <paragraph>Cascading Style Sheets (CSS) provide a powerful way to control the appearance and layout of
            HTML elements. CSS allows for styling elements in various ways, including inline styles,
            embedded style sheets, and external style sheets.</paragraph>
            <paragraph>The CSS laguage renders element following a box model. The box model allows you to control
            the spacing, borders, and overall layout of elements on a web page, ensuring a more
            organized and visually appealing design.</paragraph>
            <paragraph>Additionally, there are different ways to tell the programs how much space you want an
            element to take in the document. The most common measurement is pixels (px), but you can
            also use the typical cm and in, the more relative em (relative to font size) and vw or vh
            (viewport width and height). </paragraph>
            <list>
                <list-paragraph>General CSS stylings</list-paragraph>
                <item>Absolute Positioning: Removes an element from the normal flow and
                positions it relative to its nearest positioned ancestor .class {position: absolute;}.</item>
                <item>Relative Positioning: Positions the element relative to its normal position .class {position: relative;}.</item>
                <item>Background Image: .class {background-image: url('background.png');}</item>
                <item>Background Color: .class {background-color: lightgray;}</item>
                <item>Width and height:Set the dimensions of the element. .class {width: 200px; height: 100px;}</item>
                <item>Margin: Space outside the border. .class {margin: 15px;}</item>
                <item>Border: The boundary around the content. .class {border: 5px solid black;}</item>
                <item>Padding: Space between the content and the border. .class {padding: 10px;}</item>
            </list>
        </lesson>     
        <example-block>         
            <example>
                <title>
                    CSS in HTML
                </title>
                <paragraph>There are three main ways to call/ CSS styles in an HTML document. In order, the closer the style is to its element, 
                the more it affects t. Thus, inline overrides embedded which overrides external styling. </paragraph>
                <list>           
                    <item>Inline Styles: Are directly applied within the HTML element using the style attribute.
                        <list>
                            <item>Useful for applying specific styles to individual elements.</item>
                            <item>Offers the highest level of specificity, overriding embedded and external styles.</item>
                            <item>Best suited for quick, one-off customizations rather than large-scale styling.</item>
                        </list>
                    </item>
                    <item>Embedded Style Sheets:Is defined within a &lt;style&gt; tag located in the &lt;head&gt; section of the HTML document.
                        <list>
                            <item>Provides a centralized way to manage styles for a single page.</item>
                            <item>Allows better organization and readability compared to inline styles.</item>
                            <item>Styles defined here override those in external stylesheets but are overridden by inline styles.</item>
                        </list>
                    </item>
                    <item>External Style Sheets: Is contained in a separate .css file, linked to the HTML document via the &lt;link&gt; element.
                        <list>
                            <item>Promotes reusability and consistency across multiple pages of a website.</item>
                            <item>Eases maintenance by keeping content and design separate.</item>
                            <item>External styles are less specific than embedded and inline styles and can be overridden by them.</item>
                        </list>
                    </item>
                </list>
                <img>
                    /shared/ex4.jpg
                </img>
            </example>
        </example-block>
</eml_U1>
